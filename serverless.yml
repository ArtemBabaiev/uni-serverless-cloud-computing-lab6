service: lab5
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x

functions:
  sqsHandler:
    handler: handler.sqsHandler
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - MainQueue
              - Arn
custom:
  serverless-offline-sqs:
    autoCreate: true
    apiVersion: '2012-11-05'
    endpoint: http://localhost:9324
    region: eu-west-1
    accessKeyId: root
    secretAccessKey: root
  
  serverless-dynamodb:
    start:
      port: 8000
      region: eu-west-1
      docker: false
      inMemory: true
      migrate: true

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: usersTable
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: email-index
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: ALL
    OrganizationsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: organizationsTable
        AttributeDefinitions:
          - AttributeName: orgId
            AttributeType: S
          - AttributeName: name
            AttributeType: S
        KeySchema:
          - AttributeName: orgId
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: name-index
            KeySchema:
              - AttributeName: name
                KeyType: HASH
            Projection:
              ProjectionType: ALL
    MainQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: main-queue

plugins:
  - serverless-dynamodb
  - serverless-offline-sqs
  - serverless-offline